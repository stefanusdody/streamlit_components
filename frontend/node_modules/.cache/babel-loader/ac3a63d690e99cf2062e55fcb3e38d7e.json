{"ast":null,"code":"var _jsxFileName = \"/Users/dody/Desktop/component_st/discrete_slider/frontend/src/DiscreteSlider.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\nimport Slider from '@mui/material/Slider';\nconst marks = [{\n  value: 0,\n  label: '0°C'\n}, {\n  value: 20,\n  label: '20°C'\n}, {\n  value: 37,\n  label: '37°C'\n}, {\n  value: 100,\n  label: '100°C'\n}];\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nclass DiscreteSlider extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n\n    this.render = () => {\n      const StyledSlider = styled(Slider)({\n        margin: `${vMargin}px ${hMargin}px`,\n        width: this.props.width - hMargin * 2\n      });\n      return /*#__PURE__*/React.createElement(StyledSlider, {\n        \"aria-label\": \"Restricted values\",\n        defaultValue: 20,\n        getAriaValueText: valuetext,\n        step: null,\n        valueLabelDisplay: \"off\",\n        marks: marks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      });\n    };\n  }\n\n}\n\nexport default withStreamlitConnection(DiscreteSlider);","map":{"version":3,"sources":["/Users/dody/Desktop/component_st/discrete_slider/frontend/src/DiscreteSlider.tsx"],"names":["StreamlitComponentBase","withStreamlitConnection","React","Slider","marks","value","label","valuetext","DiscreteSlider","render","StyledSlider","styled","margin","vMargin","hMargin","width","props"],"mappings":";AAAA,SAEEA,sBAFF,EAGEC,uBAHF,QAIO,yBAJP;AAKA,OAAOC,KAAP,MAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,CAAT;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,EAAT;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAFY,EAGZ;AAAED,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAHY,EAIZ;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAJY,CAAd;;AAOA,SAASC,SAAT,CAAmBF,KAAnB,EAAkC;AAChC,SAAQ,GAAEA,KAAM,IAAhB;AACD;;AAED,MAAMG,cAAN,SAA6BR,sBAA7B,CAAoD;AAAA;AAAA;;AAAA,SAC3CS,MAD2C,GAClC,MAAiB;AAE/B,YAAMC,YAAY,GAAGC,MAAM,CAACR,MAAD,CAAN,CAAe;AAClCS,QAAAA,MAAM,EAAG,GAAEC,OAAQ,MAAKC,OAAQ,IADE;AAElCC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAoBD,OAAO,GAAG;AAFH,OAAf,CAArB;AAKA,0BACE,oBAAC,YAAD;AACE,sBAAW,mBADb;AAEE,QAAA,YAAY,EAAE,EAFhB;AAGE,QAAA,gBAAgB,EAAEP,SAHpB;AAIE,QAAA,IAAI,EAAE,IAJR;AAKE,QAAA,iBAAiB,EAAC,KALpB;AAME,QAAA,KAAK,EAAEH,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAlBiD;AAAA;;AAAA;;AAoBpD,eAAeH,uBAAuB,CAACO,cAAD,CAAtC","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\n\nconst marks = [\n  { value: 0,label: '0°C'},\n  { value: 20,label: '20°C'},\n  { value: 37, label: '37°C'},\n  { value: 100, label: '100°C'},\n];\n\nfunction valuetext(value: number) {\n  return `${value}°C`;\n}\n\nclass DiscreteSlider extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n\n    const StyledSlider = styled(Slider)({\n      margin: `${vMargin}px ${hMargin}px`,\n      width: this.props.width - (hMargin * 2),\n    })\n\n    return (\n      <StyledSlider\n        aria-label=\"Restricted values\"\n        defaultValue={20}\n        getAriaValueText={valuetext}\n        step={null}\n        valueLabelDisplay=\"off\"\n        marks={marks}\n      />\n    );\n  }\n}\nexport default withStreamlitConnection(DiscreteSlider)\n"]},"metadata":{},"sourceType":"module"}